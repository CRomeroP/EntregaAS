package Entrega;
// Generated 14-abr-2016 8:24:58 by Hibernate Tools 4.3.1

import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;




/**
 * Recurs generated by hbm2java
 */
@Entity
@Table(name = "recurs")
@Inheritance(strategy = InheritanceType.TABLE_PER_CLASS)
public class Recurs  implements java.io.Serializable {


    private String nom;
    private Set<ReservaAmbNotificacio> reservasambnotificacio;
    private Set<ReservaSenseNotificacio> reservassensenotificacio;
    private String type;     

    public Recurs() {
    }
      
    public Recurs(String nom) {
        this.nom = nom;
    }
    
    @Id   
    @Column(name = "nom", unique = true, nullable = false, length = 50)
    public String getNom() {
        return this.nom;
    }
    
    public void setNom(String nom) {
        this.nom = nom;
    }
    
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "recurs")
    public Set<ReservaAmbNotificacio> getReservasAmbNotificacio() {
	return this.reservasambnotificacio;
    }

    public void setReservasAmbNotificacio(Set<ReservaAmbNotificacio> reservas) {
	this.reservasambnotificacio = reservas;
    }

   

    @OneToMany(mappedBy = "recurs")
    public Set<ReservaSenseNotificacio> getReservasSenseNotificacio() {
        return reservassensenotificacio;
    }

    public void setReservasSenseNotificacio(Set<ReservaSenseNotificacio> reservassensenotificacio) {
        this.reservassensenotificacio = reservassensenotificacio;
    }

    @Column(name = "type", unique = false, nullable = false, length = 50)
    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }
}


